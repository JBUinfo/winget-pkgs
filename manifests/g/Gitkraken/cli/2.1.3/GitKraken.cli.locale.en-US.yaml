# This file was generated by GoReleaser. DO NOT EDIT.
# yaml-language-server: $schema=https://aka.ms/winget-manifest.defaultLocale.1.9.0.schema.json
PackageIdentifier: GitKraken.cli
PackageVersion: 2.1.3
PackageLocale: en-US
Publisher: Axosoft, LLC DBA GitKraken
PublisherUrl: https://www.gitkraken.com/
PublisherSupportUrl: https://gitkraken.github.io/gk-cli/docs/gk.html
PackageName: GitKraken CLI
PackageUrl: https://github.com/gitkraken/gk-cli
License: CC-BY-3.0-US
LicenseUrl: https://github.com/gitkraken/gk-cli/blob/HEAD/LICENSE
Copyright: Copyright (c) Axosoft, LLC dba GitKraken
CopyrightUrl: https://github.com/cli/cli/blob/trunk/LICENSE
ShortDescription: GitKraken official command-line tool.
Description: |-
  gk is GitKraken on the command line.
  It makes working across multiple repos easier with Workspaces, provides access to pull requests and issues from multiple services (GitHub, GitLab, Bitbucket, etc.), and seamlessly connects with GitKraken Client and GitLens in VS Code to visualize git information when you need it.
Moniker: GitKraken CLI
Tags:
  - cli
  - command-line
  - efficiency
  - git-tool
  - productivity
  - repository-management
  - tool
  - utility
  - version-control
ReleaseNotes: "## Changelog\n### \U0001F539 Others\n* - Add \"Active\" column to `ws info`\n* - Add GetDefaultBranch to native git API\n* - Add Set to actions.Workspace interface Update ws create prompting Fix workspace dir\n* - Add URL to git.RepoData and helper funcs to obtain browser url\n* - Add `work start` use example and return better error\n* - Add ability to add provider locally w/o GK account Fix bug in PAT settings storage\n* - Add ability to filter work by current workspace - this is default behavior Adds support for a --all flag for gk work ls - will show all work across all workspaces\n* - Add bulk execution support Print default workspace on top level help\n* - Add cloud repoID when updating\n* - Add easter egg (kraken command)\n* - Add flags to ws fetch\n* - Add flags to ws pull\n* - Add gitlab to `issue list`\n* - Add jira to `issue list`\n* - Add new files to commit and push even with dirty changes\n* - Add otel and settings file\n* - Add select and multiselect components for prompting lists\n* - Adds IsRepo API to native git binary Adds build-windows specific make target\n* - Adds KV cache using badgerdb Adds caching of ws list command\n* - Adds PR title/body generation via AI\n* - Adds ability to determine provider owner name from a git remote url\n* - Adds actions/Workspace interface + private impl Adds ws info action w/ caching\n* - Adds bulk output display\n* - Adds centralized graphql error handling\n* - Adds comment spacing lint rule and fixes where needed\n* - Adds commit logic\n* - Adds delete\n* - Adds dotenv support for local dev/testing\n* - Adds expected error type Only log / send errors to sentry if they are expected\n* - Adds fetch\n* - Adds first pass at gk work info Support display of repo branch unstaged and staged changes in tabular format\n* - Adds gk graph command with interactive output\n* - Adds gk work set\n* - Adds gk ws refresh in favor of ws fetch and pull\n* - Adds improved concurrency handling\n* - Adds initial goreleaser support\n* - Adds internet check and timeout for gk auth login command\n* - Adds make target for install dev dependencies\n* - Adds make target for os and target architecture\n* - Adds meta to entry instead of context - much cleaner and resusable Adds custom round tripper to wrap transport so we can add request id headers from GKS\n* - Adds native git diff API Adds prompt retrieval service and impl Adds ai service interface w/ open ai imple Adds req/response objects\n* - Adds plumbing for supporting AI commit messages\n* - Adds progress bar Adds mutli command support for bulk execution for a given repo\n* - Adds proper interface / impl for organization, user and provider\n* - Adds pull\n* - Adds remote information to work info table\n* - Adds repo URL to workspace queries Use repo url for clone operations\n* - Adds repo location for cloud workspaces\n* - Adds sentry hook for CLI and moves logging to top level root cmd\n* - Adds support for cache invalidation\n* - Adds support for creating a workspace from a root directory path\n* - Adds support for displaying graph in GKD and GL clients\n* - Adds support for force deletion of work Adds data structures for supporting repo work pr data\n* - Adds support for gk work list\n* - Adds support for storing work related PR data during pr creation\n* - Adds support for work add Do now show info output for standalone workspace\n* - Adds update & only invalidates cache on success\n* - Adds workspace unset command Introduces Standalone workspace and returns as default if no workspace is set\n* - Allow URLs to add repos\n* - Automatically detect provider on ws create and update\n* - Better changelog and test winget\n* - Bulk display separate out stdout and stderr On bulk updates if err, print stderr and exit\n* - Change Errorf to errors.New()\n* - Cleans up WS add to ensure proper error checking Fixes several bugs\n* - Clear default workspace if workspace being deleted is currently default\n* - Close graph with Ctrl+c\n* - Cloud workspace create\n* - Complete adding json tags to workspace model\n* - Completed convert to cloud Updated native git executor GetRepoData to leverage go-git instead of home grown error prone logic\n* - Consolidate cloud repo building and workspace provider detection\n* - Create Get and Remove provider token\n* - Create LOCAL workspaces with `ws create`\n* - Create README.md\n* - Create `gk setup`\n* - Create `issue list` command (only github)\n* - Create `provider list` and add jira token\n* - Create `repoMapping` file\n* - Create `workspace` commands tempalte and `ws list` logic\n* - Create `ws add-repo`\n* - Create `ws clone`\n* - Create `ws delete`\n* - Create `ws fetch`\n* - Create `ws info`\n* - Create `ws pull`\n* - Create `ws remove-repo`\n* - Create `ws set` and add local workspaces to `ws list`\n* - Create `ws update`\n* - Create cloud branch at work start and remove it at work delete\n* - Create cloudWorkspace file\n* - Create error tests for workspace and work actions\n* - Create gitActions\n* - Create login and logout commands\n* - Create new `work` commands template\n* - Create oauth login flow\n* - Create organization command and set default org at login\n* - Create organization error tests + create unmarshal and request error wrapper\n* - Create pr after push with new flag\n* - Create provider error tests\n* - Create provider token refresh\n* - Create ´gk auth token´\n* - DefaultWorkspace format\n* - Display bulk output errors in red\n* - Don't lowercase strings on slugify (#148)\n* - Dont checkout if user is in main while refresh\n* - Ensure we can perform ws ls when not authenticated\n* - Ensure we cleanup map for a workpsace in the work list if there is no more work\n* - Ensures all commands currently supported have help text\n* - Extract PRData from WorkData\n* - Feedback changes\n* - First workspace action tests\n* - Fix + improve `organization` commands + licenses\n* - Fix PON and get repos creating workspaces\n* - Fix and improve some flows\n* - Fix bulk action errors, save pr data and merge only when no errors\n* - Fix convert to cloud\n* - Fix logic ordering when determining base branch Simplify logic when finding work by name or id\n* - Fix provider list saving cloud tokens\n* - Fix work start and create FindByName\n* - Fix: remove repos without repoID\n* - Fixes failing tests due to: - work now containing array of pointer repos - work info table now displaying pr information\n* - Fixes issue w/ not always displaying all bars All bars must be created before starting multiwriter\n* - Handle dev/prod otel url\n* - Improve 'ErrNoWorkInProgress' error message\n* - Improve `provider add` and `issue` descriptions\n* - Improve structs by using fieldalignment\n* - Initial setup\n* - Invalidate cache on refresh Better handling of ws set\n* - Isolate `git push` function\n* - Little updates/fixes/improvements and tests\n* - Make 1 workspace required during create prompting\n* - More refactoring/cleanup/debugging Working on covert to cloud\n* - Move all display rendering to actions package\n* - Move clone\n* - Move command name from env var to LDFLAG Set User-Agent header in round tripper for all calls to GKDS APIs\n* - Move workspace create to dedicated file/func\n* - Moves all command groups and flags to dedicated file Updates flag names to conform to \"flag<CommandGroupName><_CommandName_<FlagName>\" format Removes shorthand for all flags with hyphens/multiple words\n* - New graphql library\n* - New little features and fix issues\n* - On workspace unset, clear out active work if it's associated w/ workspace being unset\n* - Refactor workspace create/update be more uniform when building repos\n* - Remove \"PR for\"\n* - Remove \"feature\" from workBranchName\n* - Remove \"merge\" from changelog\n* - Remove GetOriginURLsFrom and regen mocks\n* - Remove `auth token` command\n* - Remove azure from \"provider add\"\n* - Remove logrus reliance from otel - log package only Consolidate error log and otel error log Introudce context meta Add context meta to all log calls made using WithContext\n* - Remove otel from settings Fix bug where always overwriting settings at startup\n* - Remove unnecessary context to command/cmd constructor funcs as it can be obtained from cmd arg to Run\n* - Remove/Find repo now moved to Workspace as pointer receiver to ensure proper updating\n* - Removes dependency on go-service-common by impelementing logger wrapping logrus Supports sentry\n* - Removes no longer needed FindOne on top level workspace action\n* - Replace std log calls to use go-service-common logger Update otel to use logrus (same as go-service-common logger)\n* - Replace uitable dependenancy and introduct tui.Table which is a wrapper for pterm table\n* - Resolves merge conflicts\n* - Return error if user use same name twice for UoW\n* - Revert commit - Fix bulk\n* - Send all the things to gl\n* - Set correct default ws after convert to cloud\n* - Show commit URL after push if possible\n* - Show list of workspaces when one is not set\n* - Show warning message in login and then ask\n* - Show warning while checking repos and continue\n* - Simplify ws info by compinging output\n* - Skip dirty checking when starting standalone unit of work When setting work only perform dirty checks if repos overlap w/ current active and desired active Update tests\n* - Specify the user must use path or url\n* - Support gk command with filepath\n* - Support relative filepaths\n* - Test winget and snapcraft\n* - Update custom Error to display wrapped error message if a wrapped error exists Update bulk output display to stop before we write error messages to avoid duplicate output to terminal\n* - Update default row rendering\n* - Update local workspace JSON to store PON and URL\n* - Update members output in ws info command - fall back to username if name is missing Add icon next to default workspace - ws list\n* - Update pr merge to checkout base branch and pull after merge Update end to only checkout base branch if one exists\n* - Update refresh to properly stash/pop -- or not Update work info to sync origin if there is no origin/HEAD present\n* - Update work push to print out repo URLs for one click access from CLI to browser\n* - Update work start to use branches Adds function in NativeGit to check for dirty branches Pulls in conc library to add cleaner support for concurrent processing\n* - Update workspace clone to invalidate cache\n* - Update ws update to create non-nil array of add/remove repo args\n* - Updates errors to use utils.NewExpectedError and utils.WrapError If wrapped errors are returned we send along the wrapped error in in log\n* - Updates getWorkspaceByNameOrUUID to leverage cached ws list Removes the need to cache ws info response\n* - Updates help text to better align w/ confluence\n* - Updates work start to accept name, or issue, or branch name to determine name of unit of work Removes settings from http layer Updates ai message generation to set auth and org headers\n* - Updates workspace delete to remove all work for the workspace\n* - Use bulk executor when starting work\n* - User: create error tests\n* - Uses named pipe Adds sentry to build for debugging gl Updates makefile to have dedicated ldflags for windows\n* - Workspace Create - Set repo name when adding local workspaces Workspace Delete - Update logic when determining if we can delete due to work in progress\n* - `ws fetch` add error message if there is some repo without location\n* - `ws pull` add warning message if there is some repo without location\n* - a bit more PR review cleanup\n* - add better trace names/sans\n* - add goimports to dev_deps\n* - add ls and an alias to org list\n* - add nfpms\n* - add support for providing directory to execute command\n* - add support to update cloud workspaces\n* - add top level auth command to contain login/logout\n* - adds GraphQL Client abstraction\n* - adds are you sure to ws delete\n* - adds cancelleation support in main\n* - adds convert to cloud\n* - adds first pass a gl command\n* - adds hard  coded org id\n* - adds help text and example\n* - adds list command\n* - adds ls for shorthand as list\n* - adds mutext to progress bar update\n* - adds native git processing support w/ pre/post hook processing\n* - adds otel support and improved error handling\n* - adds pr checker GHA\n* - adds pr merge support\n* - adds short help for work commit\n* - adds shorthand -r for ws remove-repos\n* - adds shorthand args to updat. makes create/update ws flags equal\n* - adds support for gracefully handling panics and sending to sentry\n* - adds support for gracefully handling panics and sending to sentry\n* - adds support for work end\n* - adds support for work push\n* - adds w and wrk aliases for work\n* - adds wholistic concurrent support for gkio cloud/local workspace\n* - associate group prs\n* - better file structure\n* - blah\n* - breaks up linux/darwin and windows\n* - bulk output cleanup\n* - changes error text to warning\n* - clean up ws info output - still needs more work\n* - cleaner handling of supported commands\n* - clone - url updates to support fall back\n* - completes ai commit message generation and api response parsing\n* - create `provider add`\n* - create `provider add` oauth flow\n* - create `work start` and cache system\n* - create shallow copies of pterm types\n* - delete unnecessary err check\n* - determine clone location when performing refresh\n* - do not add ai flags to prod builds\n* - don't treat missing work as an error in remove/remove all APIs\n* - encapsulate badger via DB\n* - ensure no dirty changes when setting/switching active work\n* - ensure stack traces for panics show up in sentry\n* - env support\n* - first pass ad adding sentry via go-service-common/log\n* - first pass at implementing work pr create\n* - fix\n* - fix -r in ws create\n* - fix build and run imports\n* - fix checks\n* - fix display issue for pr create\n* - fix gitignore\n* - fix merge conflicts\n* - fix oltel prod url typo\n* - fix panic in settings when adding provider tokens\n* - fix potential race condition in bulk executor\n* - fix repo url for local workspaces\n* - fix static analysis issues\n* - fix version ldflag\n* - fixes GL deep link format\n* - fixes PR comments\n* - fixes broken version command\n* - fixes bug in building branch checkout args\n* - fixes gl link format\n* - fixes grammatical issues\n* - fixes imports\n* - fixes imports\n* - fixes issue in work store CreateOrUpdate\n* - fixes linting issue\n* - fixes location setting\n* - fixes minor issues\n* - fixes panic for error and updates ws cache key\n* - fixes rebase conflicts\n* - fixes struct alignment\n* - fixes tests\n* - fixes tests\n* - fixes tests for workspace refresh and adds a few more\n* - get current branch for each repo - fall back to work branch name on failure\n* - gkcli\n* - got convert to cloud working still need to resolve repo mapping\n* - handle empty base branch when ending work\n* - handle open AI errors cleanly\n* - handle req creation err\n* - handling errors and minor changes\n* - highlight default workspace when doing gk ws list\n* - ignore dirty state when starting work if you are on default branch\n* - improve UX by creating aliases, sort items and force flag\n* - improve changelog format\n* - improve concurrency support in bulk output display by storing stderr/stdou in a sync map\n* - incorporate PR review feedback\n* - incorporates pull request comments\n* - isolate `git pr create` function\n* - isolate `git pr merge` function\n* - issue linking updates\n* - leverage git.GetBrowserURL and add create as a shortcut to work start\n* - make auth error expected\n* - make pr create work w/ refactored bulk executor\n* - minor update to map deletion\n* - minor updates after rebase\n* - move NewWorkspace, improve functions and change flags\n* - move default ws storage to workspace action\n* - move organization, provider, and user to top level actions package\n* - move workspace specific action files to workspace directory\n* - on windows machines set GK_ROOT_CMD_NAME env var to gk.exe\n* - only add sentry hook if we have a sentry dsn\n* - only display hyperlinks if supported by terminal\n* - only support pr actions for GitHub provider\n* - only support table output for now\n* - point OTel to prod for release Update otel service name\n* - prompt style updates\n* - pushes native git command execution into root command\n* - pushing header standardization into http service\n* - quick fix to work end steps value\n* - quick perf update to store commands in map instead of array\n* - quick update to add default timeout to kraken dance api\n* - refactor bulk exector\n* - refactor utils/repo_url to not use named returns\n* - refactored workspace interface/impl\n* - remove .env warning\n* - remove erroneous ''\n* - remove func var\n* - remove git from provider list help\n* - remove pr create support of include/exclude repo flags\n* - remove reliance on go-service-common completely\n* - remove repo mapping file as it's not needed at present\n* - remove unnecessary flags\n* - remove unused func on progress bar\n* - remove unused struct tags\n* - remove use of conc iter for performance improvement\n* - remove workspace flag from unit of work as it's no longer needed\n* - removed storing copy of git executor on ws as it's already on config updated settings caching layer to not call get on every set command\n* - rename a bit so things don't stutter\n* - rename action package to actions\n* - rename to gk-cli\n* - resolve conflicts\n* - resolve merge conflicts\n* - resolve merge conflicts and fix imports\n* - resolve merge conflicts and run static checks\n* - resolves merge conflicts\n* - restore local workspace bugfix\n* - revert back to HTTP Send command as path param and args in body\n* - send along CWD to gl in req body\n* - set active unit of work on work start if no active work exists\n* - set default workspace on successful create if there is no default\n* - simplify EncodeTable\n* - simplify prompting and leverage pterm\n* - skip go mod cache\n* - standardize input handling for worspace name across all commands\n* - static analysis cleanup\n* - styles exploration\n* - support Stdout override\n* - support base branch flag when starting work\n* - support worktrees\n* - tidy and import\n* - unit of work --> work item\n* - unit of work --> work item\n* - update description and create GitProviders\n* - update mocks\n* - update refresh command to conform to new pass by ref pattern\n* - update switch to if/else\n* - update work start to get default branch if base branch is not provided\n* - updates after rebase\n* - updates clone messaging and default command params\n* - updates messaging from PR feedback\n* - updates mocks and fixes tests\n* - use cacheDB instead of viper\n* - use tcp socket instead of http\n* - working on worktree support for work start\n* - wrap pterm printer (io.writer)\n* - ws pull/fetch - graceful errors if location is not present\n"
ReleaseNotesUrl: https://github.com/gitkraken/gk-cli/releases/tag/2.1.3
ManifestType: defaultLocale
ManifestVersion: 1.9.0
